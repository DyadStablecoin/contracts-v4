{
  "abi": [
    {
      "inputs": [],
      "name": "CrTooHigh",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CrTooLow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "IncompleteRound",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "IncorrectEthSacrifice",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InsiderMintsExceeded",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidNft",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MissingPermission",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PublicMintsExceeded",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "StaleData",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TooMuchEth",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "BurnDyad",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "Grant",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "Liquidate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "from",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "MintDyad",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "MintNft",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "from",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "eth",
          "type": "uint256"
        }
      ],
      "name": "Redeem",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "Revoke",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "from",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnDyad",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "liquidate",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "from",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mintDyad",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "from",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "redeem",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "from",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "burnDyad(uint256,uint256)": "16ae57a3",
    "deposit(uint256)": "b6b55f25",
    "liquidate(uint256,address)": "5fae8b3d",
    "mintDyad(uint256,address,uint256)": "176c0abd",
    "redeem(uint256,address,uint256)": "d8780161",
    "withdraw(uint256,address,uint256)": "e63697c8"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CrTooHigh\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CrTooLow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IncompleteRound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IncorrectEthSacrifice\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsiderMintsExceeded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidNft\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MissingPermission\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PublicMintsExceeded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StaleData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TooMuchEth\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BurnDyad\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"Grant\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Liquidate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"from\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"MintDyad\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"MintNft\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"from\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"eth\",\"type\":\"uint256\"}],\"name\":\"Redeem\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"Revoke\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"from\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnDyad\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"from\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mintDyad\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"from\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"from\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"burnDyad(uint256,uint256)\":{\"details\":\"Will revert:      - If dNFT with id `id` does not exist      - If DYAD balance of dNFT is smaller than `amount`Emits:      - BurnDyad(uint indexed from, address indexed to, uint amount)For Auditors:      - To save gas it does not check if `amount` is 0 \",\"params\":{\"amount\":\"Amount of DYAD to mint\",\"id\":\"Id of the dNFT to mint from\"}},\"deposit(uint256)\":{\"details\":\"Will revert:      - If new deposit equals zero shares      - If dNFT with id `id` does not existEmits:      - Deposit(uint indexed id, uint amount)For Auditors:      - To save gas it does not check if `msg.value` is zero \",\"params\":{\"id\":\"Id of the dNFT that gets the deposited DYAD\"}},\"liquidate(uint256,address)\":{\"details\":\"Will revert:      - If dNFT is over the `LIQUIDATION_THRESHLD` after deposit      - If ETH sent is not enough to put it over the `LIQUIDATION_THRESHLD`Emits:      - Liquidate(address indexed to, uint indexed id)For Auditors:      - No need to check if the dNFT exists because a dNFT `transfer` will        revert if it does not exist.      - Permissions for this dNFT are reset because `_transfer` calls         `_beforeTokenTransfer`, where we set `lastOwnershipChange`\",\"params\":{\"id\":\"Id of the dNFT to liquidate\",\"to\":\"Address to send the dNFT to\"}},\"mintDyad(uint256,address,uint256)\":{\"details\":\"Will revert:      - If `msg.sender` is not the owner of the dNFT AND does not have         permission      - If amount is larger than the dNFT ETH deposit      - If Collateralization Ratio is is less than the min collaterization         ratio after the mintEmits:      - MintDyad(uint indexed from, address indexed to, uint amount)For Auditors:      - To save gas it does not check if `amount` is 0 \",\"params\":{\"amount\":\"Amount of DYAD to mint\",\"from\":\"Id of the dNFT to mint from\",\"to\":\"Address to send the DYAD to\"}},\"redeem(uint256,address,uint256)\":{\"details\":\"Will revert:      - If DYAD to redeem is larger thatn `msg.sender` DYAD balance      - If amount exceeds the dNFT DYAD balance      - If amount of ETH exceeds the dNFT ETH balance      - If the ETH transfer failsEmits:      - Redeem(uint indexed from, address indexed to, uint amount)For Auditors:      - To save gas it does not check if `amount` is 0       - `dyad.burn` is called in the beginning so we can revert as fast as        possible if `msg.sender` does not have enough DYAD. The dyad contract        is trusted so it introduces no re-entrancy risk. The revert is implicit        and happens in the _burn function of the ERC20 contract as an underflow.      - There is a re-entrancy risk while transfering the ETH, that is why the         `all state changes are done before the ETH transfer. I do not see why        a `nonReentrant` modifier would be needed here, lets save the gas.\",\"params\":{\"amount\":\"Amount of DYAD to redeem\",\"from\":\"dNFT to redeem from\",\"to\":\"Address to send the ETH to\"},\"returns\":{\"_0\":\"eth Amount of ETH redeemed for DYAD\"}},\"withdraw(uint256,address,uint256)\":{\"details\":\"Will revert:      - If `msg.sender` is not the owner of the dNFT AND does not have         permission      - If `amount` to withdraw is larger than the dNFT deposit      - If Collateralization Ratio is is less than the min collaterization         ratio after the withdrawalEmits:      - Withdraw(uint indexed from, address indexed to, uint amount)For Auditors:      - To save gas it does not check if `amount` is 0       - To save gas it only fails implicitly if `from` does not have enough        deposited ETH\",\"params\":{\"amount\":\"Amount of ETH to withdraw\",\"from\":\"Id of the dNFT to withdraw from\",\"to\":\"Address to send the ETH to\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burnDyad(uint256,uint256)\":{\"notice\":\"Burn `amount` of DYAD \"},\"deposit(uint256)\":{\"notice\":\"Deposit ETH \"},\"liquidate(uint256,address)\":{\"notice\":\"Liquidate dNFT by covering its missing deposit and transfering it          to a new owner\"},\"mintDyad(uint256,address,uint256)\":{\"notice\":\"Mint `amount` of DYAD as an ERC-20 token from dNFT\"},\"redeem(uint256,address,uint256)\":{\"notice\":\"Redeem DYAD ERC20 for ETH\"},\"withdraw(uint256,address,uint256)\":{\"notice\":\"Withdraw ETH from dNFT\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IDNft.sol\":\"IDNft\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solmate/=lib/solmate/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"src/interfaces/IDNft.sol\":{\"keccak256\":\"0xa1e973e80f400edb49e9fd168bf1654d992012c7f3b3cf297167a28a4c169676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://edbe3333bf1f0e86b92910fad2f69039c072675e88b037292a1731a40cfdd259\",\"dweb:/ipfs/QmSjGtj3My8a2WASnJRSLeCLYT2iLozEKKwKMXsC89Hba3\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "CrTooHigh"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CrTooLow"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "IncompleteRound"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "IncorrectEthSacrifice"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InsiderMintsExceeded"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidNft"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MissingPermission"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PublicMintsExceeded"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "StaleData"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TooMuchEth"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "BurnDyad",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Deposit",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Grant",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Liquidate",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "from",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MintDyad",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "MintNft",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "from",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "eth",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Redeem",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Revoke",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "from",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Withdraw",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burnDyad"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "deposit"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "liquidate"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "from",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mintDyad"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "from",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "redeem",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "from",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "burnDyad(uint256,uint256)": {
            "details": "Will revert:      - If dNFT with id `id` does not exist      - If DYAD balance of dNFT is smaller than `amount`Emits:      - BurnDyad(uint indexed from, address indexed to, uint amount)For Auditors:      - To save gas it does not check if `amount` is 0 ",
            "params": {
              "amount": "Amount of DYAD to mint",
              "id": "Id of the dNFT to mint from"
            }
          },
          "deposit(uint256)": {
            "details": "Will revert:      - If new deposit equals zero shares      - If dNFT with id `id` does not existEmits:      - Deposit(uint indexed id, uint amount)For Auditors:      - To save gas it does not check if `msg.value` is zero ",
            "params": {
              "id": "Id of the dNFT that gets the deposited DYAD"
            }
          },
          "liquidate(uint256,address)": {
            "details": "Will revert:      - If dNFT is over the `LIQUIDATION_THRESHLD` after deposit      - If ETH sent is not enough to put it over the `LIQUIDATION_THRESHLD`Emits:      - Liquidate(address indexed to, uint indexed id)For Auditors:      - No need to check if the dNFT exists because a dNFT `transfer` will        revert if it does not exist.      - Permissions for this dNFT are reset because `_transfer` calls         `_beforeTokenTransfer`, where we set `lastOwnershipChange`",
            "params": {
              "id": "Id of the dNFT to liquidate",
              "to": "Address to send the dNFT to"
            }
          },
          "mintDyad(uint256,address,uint256)": {
            "details": "Will revert:      - If `msg.sender` is not the owner of the dNFT AND does not have         permission      - If amount is larger than the dNFT ETH deposit      - If Collateralization Ratio is is less than the min collaterization         ratio after the mintEmits:      - MintDyad(uint indexed from, address indexed to, uint amount)For Auditors:      - To save gas it does not check if `amount` is 0 ",
            "params": {
              "amount": "Amount of DYAD to mint",
              "from": "Id of the dNFT to mint from",
              "to": "Address to send the DYAD to"
            }
          },
          "redeem(uint256,address,uint256)": {
            "details": "Will revert:      - If DYAD to redeem is larger thatn `msg.sender` DYAD balance      - If amount exceeds the dNFT DYAD balance      - If amount of ETH exceeds the dNFT ETH balance      - If the ETH transfer failsEmits:      - Redeem(uint indexed from, address indexed to, uint amount)For Auditors:      - To save gas it does not check if `amount` is 0       - `dyad.burn` is called in the beginning so we can revert as fast as        possible if `msg.sender` does not have enough DYAD. The dyad contract        is trusted so it introduces no re-entrancy risk. The revert is implicit        and happens in the _burn function of the ERC20 contract as an underflow.      - There is a re-entrancy risk while transfering the ETH, that is why the         `all state changes are done before the ETH transfer. I do not see why        a `nonReentrant` modifier would be needed here, lets save the gas.",
            "params": {
              "amount": "Amount of DYAD to redeem",
              "from": "dNFT to redeem from",
              "to": "Address to send the ETH to"
            },
            "returns": {
              "_0": "eth Amount of ETH redeemed for DYAD"
            }
          },
          "withdraw(uint256,address,uint256)": {
            "details": "Will revert:      - If `msg.sender` is not the owner of the dNFT AND does not have         permission      - If `amount` to withdraw is larger than the dNFT deposit      - If Collateralization Ratio is is less than the min collaterization         ratio after the withdrawalEmits:      - Withdraw(uint indexed from, address indexed to, uint amount)For Auditors:      - To save gas it does not check if `amount` is 0       - To save gas it only fails implicitly if `from` does not have enough        deposited ETH",
            "params": {
              "amount": "Amount of ETH to withdraw",
              "from": "Id of the dNFT to withdraw from",
              "to": "Address to send the ETH to"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "burnDyad(uint256,uint256)": {
            "notice": "Burn `amount` of DYAD "
          },
          "deposit(uint256)": {
            "notice": "Deposit ETH "
          },
          "liquidate(uint256,address)": {
            "notice": "Liquidate dNFT by covering its missing deposit and transfering it          to a new owner"
          },
          "mintDyad(uint256,address,uint256)": {
            "notice": "Mint `amount` of DYAD as an ERC-20 token from dNFT"
          },
          "redeem(uint256,address,uint256)": {
            "notice": "Redeem DYAD ERC20 for ETH"
          },
          "withdraw(uint256,address,uint256)": {
            "notice": "Withdraw ETH from dNFT"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@solmate/=lib/solmate/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 1000000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/interfaces/IDNft.sol": "IDNft"
      },
      "libraries": {}
    },
    "sources": {
      "src/interfaces/IDNft.sol": {
        "keccak256": "0xa1e973e80f400edb49e9fd168bf1654d992012c7f3b3cf297167a28a4c169676",
        "urls": [
          "bzz-raw://edbe3333bf1f0e86b92910fad2f69039c072675e88b037292a1731a40cfdd259",
          "dweb:/ipfs/QmSjGtj3My8a2WASnJRSLeCLYT2iLozEKKwKMXsC89Hba3"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/interfaces/IDNft.sol",
    "id": 30386,
    "exportedSymbols": {
      "IDNft": [
        30385
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:6722:44",
    "nodes": [
      {
        "id": 30246,
        "nodeType": "PragmaDirective",
        "src": "32:25:44",
        "nodes": [],
        "literals": [
          "solidity",
          "=",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 30385,
        "nodeType": "ContractDefinition",
        "src": "59:6694:44",
        "nodes": [
          {
            "id": 30252,
            "nodeType": "EventDefinition",
            "src": "79:53:44",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "97e1dc560b408f366de12df1bd5ca8ef322d846959ccec261e46f96562d9cf00",
            "name": "MintNft",
            "nameLocation": "85:7:44",
            "parameters": {
              "id": 30251,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30248,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "108:2:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 30252,
                  "src": "95:15:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30247,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "95:4:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30250,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "128:2:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 30252,
                  "src": "112:18:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30249,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "112:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "94:37:44"
            }
          },
          {
            "id": 30260,
            "nodeType": "EventDefinition",
            "src": "135:68:44",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "9da6493a92039daf47d1f2d7a782299c5994c6323eb1e972f69c432089ec52bf",
            "name": "Withdraw",
            "nameLocation": "141:8:44",
            "parameters": {
              "id": 30259,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30254,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "164:4:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 30260,
                  "src": "151:17:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30253,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "151:4:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30256,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "186:2:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 30260,
                  "src": "170:18:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30255,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "170:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30258,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "195:6:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 30260,
                  "src": "190:11:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30257,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "190:4:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "150:52:44"
            }
          },
          {
            "id": 30268,
            "nodeType": "EventDefinition",
            "src": "206:68:44",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "c7a0f9746296432bab185f8f0020c7c9489291fd5cfac7593c7665f72bc9d9c4",
            "name": "MintDyad",
            "nameLocation": "212:8:44",
            "parameters": {
              "id": 30267,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30262,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "235:4:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 30268,
                  "src": "222:17:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30261,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "222:4:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30264,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "257:2:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 30268,
                  "src": "241:18:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30263,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "241:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30266,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "266:6:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 30268,
                  "src": "261:11:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30265,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "261:4:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "221:52:44"
            }
          },
          {
            "id": 30274,
            "nodeType": "EventDefinition",
            "src": "277:46:44",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "bc4444983b3b8260a57895352d214c2bbcd71114f2b49bea20e76cd64999a7cf",
            "name": "BurnDyad",
            "nameLocation": "283:8:44",
            "parameters": {
              "id": 30273,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30270,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "306:2:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 30274,
                  "src": "293:15:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30269,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "293:4:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30272,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "315:6:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 30274,
                  "src": "310:11:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30271,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "310:4:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "292:30:44"
            }
          },
          {
            "id": 30280,
            "nodeType": "EventDefinition",
            "src": "326:53:44",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "9d57e76bcd4b88b0969cb0e0333b5da0931cb34b689f331b40e564e3f76a2f5a",
            "name": "Liquidate",
            "nameLocation": "332:9:44",
            "parameters": {
              "id": 30279,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30276,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "355:2:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 30280,
                  "src": "342:15:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30275,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "342:4:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30278,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "375:2:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 30280,
                  "src": "359:18:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30277,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "359:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "341:37:44"
            }
          },
          {
            "id": 30290,
            "nodeType": "EventDefinition",
            "src": "382:78:44",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "dd2d8631d27ce277aa03636f75ad665aa9f13516ec654fce871f889eb15cf6c7",
            "name": "Redeem",
            "nameLocation": "388:6:44",
            "parameters": {
              "id": 30289,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30282,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "411:4:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 30290,
                  "src": "398:17:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30281,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "398:4:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30284,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "422:6:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 30290,
                  "src": "417:11:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30283,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "417:4:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30286,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "446:2:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 30290,
                  "src": "430:18:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30285,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "430:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30288,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "eth",
                  "nameLocation": "455:3:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 30290,
                  "src": "450:8:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30287,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "450:4:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "397:62:44"
            }
          },
          {
            "id": 30296,
            "nodeType": "EventDefinition",
            "src": "463:59:44",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "ae114a60e55fc87cd2337e3dd95e4e5d97b626c4025f203a9c2c1b3b610032e1",
            "name": "Grant",
            "nameLocation": "469:5:44",
            "parameters": {
              "id": 30295,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30292,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "492:2:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 30296,
                  "src": "479:15:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30291,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "479:4:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30294,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "512:8:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 30296,
                  "src": "496:24:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30293,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "496:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "478:43:44"
            }
          },
          {
            "id": 30302,
            "nodeType": "EventDefinition",
            "src": "525:59:44",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "d5d64031e0f55cf42bc3b7d0462f8404a4d63f7ccf84be9510cd6a5300552e42",
            "name": "Revoke",
            "nameLocation": "531:6:44",
            "parameters": {
              "id": 30301,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30298,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "554:2:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 30302,
                  "src": "541:15:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30297,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "541:4:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30300,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "574:8:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 30302,
                  "src": "558:24:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30299,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "558:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "540:43:44"
            }
          },
          {
            "id": 30308,
            "nodeType": "EventDefinition",
            "src": "587:46:44",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "a3af609bf46297028ce551832669030f9effef2b02606d02cbbcc40fe6b47c55",
            "name": "Deposit",
            "nameLocation": "593:7:44",
            "parameters": {
              "id": 30307,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30304,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "616:2:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 30308,
                  "src": "603:15:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30303,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "603:4:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30306,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "625:6:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 30308,
                  "src": "620:11:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30305,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "620:4:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "602:30:44"
            }
          },
          {
            "id": 30310,
            "nodeType": "ErrorDefinition",
            "src": "637:30:44",
            "nodes": [],
            "errorSelector": "30cd7471",
            "name": "NotOwner",
            "nameLocation": "643:8:44",
            "parameters": {
              "id": 30309,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "664:2:44"
            }
          },
          {
            "id": 30312,
            "nodeType": "ErrorDefinition",
            "src": "670:30:44",
            "nodes": [],
            "errorSelector": "6ead710b",
            "name": "StaleData",
            "nameLocation": "676:9:44",
            "parameters": {
              "id": 30311,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "697:2:44"
            }
          },
          {
            "id": 30314,
            "nodeType": "ErrorDefinition",
            "src": "703:30:44",
            "nodes": [],
            "errorSelector": "40da557a",
            "name": "CrTooLow",
            "nameLocation": "709:8:44",
            "parameters": {
              "id": 30313,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "730:2:44"
            }
          },
          {
            "id": 30316,
            "nodeType": "ErrorDefinition",
            "src": "736:30:44",
            "nodes": [],
            "errorSelector": "05e666e8",
            "name": "CrTooHigh",
            "nameLocation": "742:9:44",
            "parameters": {
              "id": 30315,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "763:2:44"
            }
          },
          {
            "id": 30318,
            "nodeType": "ErrorDefinition",
            "src": "769:30:44",
            "nodes": [],
            "errorSelector": "8ad52bdd",
            "name": "IncompleteRound",
            "nameLocation": "775:15:44",
            "parameters": {
              "id": 30317,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "796:2:44"
            }
          },
          {
            "id": 30320,
            "nodeType": "ErrorDefinition",
            "src": "802:30:44",
            "nodes": [],
            "errorSelector": "f7e53179",
            "name": "PublicMintsExceeded",
            "nameLocation": "808:19:44",
            "parameters": {
              "id": 30319,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "829:2:44"
            }
          },
          {
            "id": 30322,
            "nodeType": "ErrorDefinition",
            "src": "835:30:44",
            "nodes": [],
            "errorSelector": "9652890b",
            "name": "InsiderMintsExceeded",
            "nameLocation": "841:20:44",
            "parameters": {
              "id": 30321,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "862:2:44"
            }
          },
          {
            "id": 30324,
            "nodeType": "ErrorDefinition",
            "src": "868:30:44",
            "nodes": [],
            "errorSelector": "3f904dc0",
            "name": "MissingPermission",
            "nameLocation": "874:17:44",
            "parameters": {
              "id": 30323,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "895:2:44"
            }
          },
          {
            "id": 30326,
            "nodeType": "ErrorDefinition",
            "src": "901:30:44",
            "nodes": [],
            "errorSelector": "31b5f2ab",
            "name": "IncorrectEthSacrifice",
            "nameLocation": "907:21:44",
            "parameters": {
              "id": 30325,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "928:2:44"
            }
          },
          {
            "id": 30328,
            "nodeType": "ErrorDefinition",
            "src": "934:30:44",
            "nodes": [],
            "errorSelector": "e177b919",
            "name": "TooMuchEth",
            "nameLocation": "940:10:44",
            "parameters": {
              "id": 30327,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "961:2:44"
            }
          },
          {
            "id": 30330,
            "nodeType": "ErrorDefinition",
            "src": "967:30:44",
            "nodes": [],
            "errorSelector": "0ff20756",
            "name": "InvalidNft",
            "nameLocation": "973:10:44",
            "parameters": {
              "id": 30329,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "994:2:44"
            }
          },
          {
            "id": 30336,
            "nodeType": "FunctionDefinition",
            "src": "1372:43:44",
            "nodes": [],
            "documentation": {
              "id": 30331,
              "nodeType": "StructuredDocumentation",
              "src": "1001:368:44",
              "text": " @notice Deposit ETH \n @dev Will revert:\n      - If new deposit equals zero shares\n      - If dNFT with id `id` does not exist\n @dev Emits:\n      - Deposit(uint indexed id, uint amount)\n @dev For Auditors:\n      - To save gas it does not check if `msg.value` is zero \n @param id Id of the dNFT that gets the deposited DYAD"
            },
            "functionSelector": "b6b55f25",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "1381:7:44",
            "parameters": {
              "id": 30334,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30333,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1394:2:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 30336,
                  "src": "1389:7:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30332,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1389:4:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1388:9:44"
            },
            "returnParameters": {
              "id": 30335,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1414:0:44"
            },
            "scope": 30385,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 30346,
            "nodeType": "FunctionDefinition",
            "src": "2192:63:44",
            "nodes": [],
            "documentation": {
              "id": 30337,
              "nodeType": "StructuredDocumentation",
              "src": "1419:770:44",
              "text": " @notice Withdraw ETH from dNFT\n @dev Will revert:\n      - If `msg.sender` is not the owner of the dNFT AND does not have \n        permission\n      - If `amount` to withdraw is larger than the dNFT deposit\n      - If Collateralization Ratio is is less than the min collaterization \n        ratio after the withdrawal\n @dev Emits:\n      - Withdraw(uint indexed from, address indexed to, uint amount)\n @dev For Auditors:\n      - To save gas it does not check if `amount` is 0 \n      - To save gas it only fails implicitly if `from` does not have enough\n        deposited ETH\n @param from Id of the dNFT to withdraw from\n @param to Address to send the ETH to\n @param amount Amount of ETH to withdraw"
            },
            "functionSelector": "e63697c8",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "2201:8:44",
            "parameters": {
              "id": 30344,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30339,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "2215:4:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 30346,
                  "src": "2210:9:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30338,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2210:4:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30341,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2229:2:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 30346,
                  "src": "2221:10:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30340,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2221:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30343,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2238:6:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 30346,
                  "src": "2233:11:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30342,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2233:4:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2209:36:44"
            },
            "returnParameters": {
              "id": 30345,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2254:0:44"
            },
            "scope": 30385,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 30356,
            "nodeType": "FunctionDefinition",
            "src": "2932:63:44",
            "nodes": [],
            "documentation": {
              "id": 30347,
              "nodeType": "StructuredDocumentation",
              "src": "2259:670:44",
              "text": " @notice Mint `amount` of DYAD as an ERC-20 token from dNFT\n @dev Will revert:\n      - If `msg.sender` is not the owner of the dNFT AND does not have \n        permission\n      - If amount is larger than the dNFT ETH deposit\n      - If Collateralization Ratio is is less than the min collaterization \n        ratio after the mint\n @dev Emits:\n      - MintDyad(uint indexed from, address indexed to, uint amount)\n @dev For Auditors:\n      - To save gas it does not check if `amount` is 0 \n @param from Id of the dNFT to mint from\n @param to Address to send the DYAD to\n @param amount Amount of DYAD to mint"
            },
            "functionSelector": "176c0abd",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "mintDyad",
            "nameLocation": "2941:8:44",
            "parameters": {
              "id": 30354,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30349,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "2955:4:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 30356,
                  "src": "2950:9:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30348,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2950:4:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30351,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2969:2:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 30356,
                  "src": "2961:10:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30350,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2961:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30353,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2978:6:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 30356,
                  "src": "2973:11:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30352,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2973:4:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2949:36:44"
            },
            "returnParameters": {
              "id": 30355,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2994:0:44"
            },
            "scope": 30385,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 30364,
            "nodeType": "FunctionDefinition",
            "src": "3438:49:44",
            "nodes": [],
            "documentation": {
              "id": 30357,
              "nodeType": "StructuredDocumentation",
              "src": "2999:436:44",
              "text": " @notice Burn `amount` of DYAD \n @dev Will revert:\n      - If dNFT with id `id` does not exist\n      - If DYAD balance of dNFT is smaller than `amount`\n @dev Emits:\n      - BurnDyad(uint indexed from, address indexed to, uint amount)\n @dev For Auditors:\n      - To save gas it does not check if `amount` is 0 \n @param id Id of the dNFT to mint from\n @param amount Amount of DYAD to mint"
            },
            "functionSelector": "16ae57a3",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "burnDyad",
            "nameLocation": "3447:8:44",
            "parameters": {
              "id": 30362,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30359,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "3461:2:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 30364,
                  "src": "3456:7:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30358,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3456:4:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30361,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3470:6:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 30364,
                  "src": "3465:11:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30360,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3465:4:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3455:22:44"
            },
            "returnParameters": {
              "id": 30363,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3486:0:44"
            },
            "scope": 30385,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 30376,
            "nodeType": "FunctionDefinition",
            "src": "4704:76:44",
            "nodes": [],
            "documentation": {
              "id": 30365,
              "nodeType": "StructuredDocumentation",
              "src": "3491:1210:44",
              "text": " @notice Redeem DYAD ERC20 for ETH\n @dev Will revert:\n      - If DYAD to redeem is larger thatn `msg.sender` DYAD balance\n      - If amount exceeds the dNFT DYAD balance\n      - If amount of ETH exceeds the dNFT ETH balance\n      - If the ETH transfer fails\n @dev Emits:\n      - Redeem(uint indexed from, address indexed to, uint amount)\n @dev For Auditors:\n      - To save gas it does not check if `amount` is 0 \n      - `dyad.burn` is called in the beginning so we can revert as fast as\n        possible if `msg.sender` does not have enough DYAD. The dyad contract\n        is trusted so it introduces no re-entrancy risk. The revert is implicit\n        and happens in the _burn function of the ERC20 contract as an underflow.\n      - There is a re-entrancy risk while transfering the ETH, that is why the \n        `all state changes are done before the ETH transfer. I do not see why\n        a `nonReentrant` modifier would be needed here, lets save the gas.\n @param from dNFT to redeem from\n @param to Address to send the ETH to\n @param amount Amount of DYAD to redeem\n @return eth Amount of ETH redeemed for DYAD"
            },
            "functionSelector": "d8780161",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "redeem",
            "nameLocation": "4713:6:44",
            "parameters": {
              "id": 30372,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30367,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "4725:4:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 30376,
                  "src": "4720:9:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30366,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4720:4:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30369,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "4739:2:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 30376,
                  "src": "4731:10:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30368,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4731:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30371,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4748:6:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 30376,
                  "src": "4743:11:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30370,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4743:4:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4719:36:44"
            },
            "returnParameters": {
              "id": 30375,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30374,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 30376,
                  "src": "4774:4:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30373,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4774:4:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4773:6:44"
            },
            "scope": 30385,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 30384,
            "nodeType": "FunctionDefinition",
            "src": "5528:57:44",
            "nodes": [],
            "documentation": {
              "id": 30377,
              "nodeType": "StructuredDocumentation",
              "src": "4784:741:44",
              "text": " @notice Liquidate dNFT by covering its missing deposit and transfering it \n         to a new owner\n @dev Will revert:\n      - If dNFT is over the `LIQUIDATION_THRESHLD` after deposit\n      - If ETH sent is not enough to put it over the `LIQUIDATION_THRESHLD`\n @dev Emits:\n      - Liquidate(address indexed to, uint indexed id)\n @dev For Auditors:\n      - No need to check if the dNFT exists because a dNFT `transfer` will\n        revert if it does not exist.\n      - Permissions for this dNFT are reset because `_transfer` calls \n        `_beforeTokenTransfer`, where we set `lastOwnershipChange`\n @param id Id of the dNFT to liquidate\n @param to Address to send the dNFT to"
            },
            "functionSelector": "5fae8b3d",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "liquidate",
            "nameLocation": "5537:9:44",
            "parameters": {
              "id": 30382,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30379,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "5552:2:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 30384,
                  "src": "5547:7:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30378,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5547:4:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30381,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5564:2:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 30384,
                  "src": "5556:10:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30380,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5556:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5546:21:44"
            },
            "returnParameters": {
              "id": 30383,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5584:0:44"
            },
            "scope": 30385,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IDNft",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          30385
        ],
        "name": "IDNft",
        "nameLocation": "69:5:44",
        "scope": 30386,
        "usedErrors": [
          30310,
          30312,
          30314,
          30316,
          30318,
          30320,
          30322,
          30324,
          30326,
          30328,
          30330
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 44
}